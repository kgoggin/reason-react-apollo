// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Graphql = require("./Graphql.bs.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var GraphqlTag = require("graphql-tag");
var Graphql_Codegen = require("./Graphql_Codegen.bs.js");

function CodegenExample$UserCard(Props) {
  var user = Props.user;
  return React.createElement("div", {
              className: "max-w-sm rounded shadow-lg"
            }, React.createElement("h2", {
                  className: "font-bold text-xl mb-2 px-6 py-4"
                }, Curry._1(Graphql_Codegen.User[/* name */2], user)));
}

var UserCard = /* module */[/* make */CodegenExample$UserCard];

var usersQuery = GraphqlTag.default("\n  query users {\n    users {\n      id\n      name\n      todos\n        {\n          id\n          isComplete\n        }\n    }\n  }\n");

function parse(v) {
  return v;
}

var UsersQuery = Curry._1(Graphql.MakeQuery, /* module */[/* parse */parse]);

function CodegenExample$Loading(Props) {
  return React.createElement("div", undefined, "Loading...");
}

var Loading = /* module */[/* make */CodegenExample$Loading];

function CodegenExample(Props) {
  var response = Curry.app(UsersQuery[/* useQuery */1], [
        usersQuery,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        /* () */0
      ]);
  var match = response[/* loading */1];
  var match$1 = response[/* data */0];
  var tmp;
  if (match$1 !== undefined) {
    var users = Belt_List.fromArray(Graphql_Codegen.Query[/* users */2](Caml_option.valFromOption(match$1)));
    tmp = users ? Belt_List.toArray(Belt_List.map(users, (function (user) {
                  return React.createElement(CodegenExample$UserCard, {
                              user: user,
                              key: Curry._1(Graphql_Codegen.User[/* id */1], user)
                            });
                }))) : React.createElement("div", undefined, "No Users");
  } else {
    tmp = null;
  }
  return React.createElement("div", {
              className: "relative"
            }, match ? React.createElement(CodegenExample$Loading, { }) : null, tmp);
}

var make = CodegenExample;

exports.UserCard = UserCard;
exports.usersQuery = usersQuery;
exports.UsersQuery = UsersQuery;
exports.Loading = Loading;
exports.make = make;
/* usersQuery Not a pure module */
